<?php

/**
 * Implements hook_module_implements_alter().
 */
function strongleg_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'init') {
    // Strongleg forces the storage of variables in the standard system, so we
    // can bypasse strongarm's hook_init() implementation.
    unset ($implementations['strongarm']);
  }
}

// We need this check to avoid errors on installation, when the module
// weight has not been set yet.
if (!function_exists('variable_features_revert')) {

/**
 * Define the component_features_revert() hook.
 * This one takes precedence over strongarm due to a lighter
 * module weight.
 */
function variable_features_revert($module) {
  // These two lines are the standard revert function from strongarm.module.
  ctools_component_features_revert('variable', $module);
  cache_clear_all('variables', 'cache');

  // Get variables managed by the feature being reverted
  if ($variables = features_get_default('variable', $module)) {

    // Load values from strongarm.
    // We don't use strongarm_set_conf() because it loads the content of $conf instead of the features.
    global $conf;
    foreach (strongarm_vars_load(FALSE, TRUE) as $var) {
      $conf[$var->name] = $var->value;
    }

    // Explicitly save the value in the database.
    foreach ($variables as $name => $variable) {
      if (!$variable->disabled && ($value = variable_get($name, NULL)) !== NULL) {
        variable_set($name, $value);
      }
    }
  }
}

}

if (!function_exists('variable_features_export')) {

/**
 * Define the component_features_export() hook.
 */
function variable_features_export($data, &$export, $module_name = '') {
  _strongleg_unset_undefined_variables($data);

  return ctools_component_features_export('variable', $data, $export);
}

}

if (!function_exists('variable_features_export_render')) {

/**
 * Define the component_features_export_render() hook.
 */
function variable_features_export_render($module, $data) {
  _strongleg_unset_undefined_variables($data);

  return ctools_component_features_export_render("variable", $module, $data);
}

}

/**
 * Helper function to remove undefined variables from an array of variable names.
 */
function _strongleg_unset_undefined_variables(&$data) {
  foreach ($data as $index => $variable_name) {
    if (variable_get($variable_name, NULL) === NULL) {
      unset ($data[$index]);
    }
  }
}
